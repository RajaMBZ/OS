Q.1) Write a menu driven script using the select statement to print
calories for food items such as pizza, burger, Salad, Pasta etc.
Code:
#!/bin/bash
pizza(){
echo "266 calories"
}
burger(){
echo "295 calories"
}
salad(){
echo "152 calories"
}
pasta(){
echo "131 calories"
}
show_menus() {
clear
echo "~~~~~~~~~~~~~~~~~~~~~"
echo " M A I N - M E N U"
echo "~~~~~~~~~~~~~~~~~~~~~"
echo "1. Pizza"
echo "2. Burger"
echo "3. Salad"
echo "4. Pasta"
echo "5. Exit"
}
read_options(){
local choice
read -p "Enter choice [ 1 - 3] " choice
case $choice in
1) pizza ;;
2) burger ;;
3) salad ;;
4) pasta ;;
5) exit 0;;
*) echo -e "${RED}Error...${STD}" && sleep 2
esac
}
while true
do
show_menus
read_options
done
Q.2) Write a shell script that, given a file name as the argument will
count vowels, blank spaces, characters, number of line and symbols.
Code:
#!/bin/bash
file=$1
v=0
if [ $# -ne 1 ]
then
 echo "$0 fileName"
 exit 1
fi
if [ ! -f $file ]
then
 echo "$file not a file"
 exit 2
fi
while read -n 1 c
do
 l=$(echo $c | tr [:upper:] [:lower:])
 [[ "$l" == "a" || "$l" == "e" || "$l" == "i" || "$l" == "o" || "$l" == "u" ]] && (( v++ ))
done < $file
echo "Vowels : $v"
echo "Characters : $(cat $file | wc -c)"
echo "Blank lines : $(grep -c '^$' $file)"
echo "Lines : $(cat $file|wc -l )"
Q.3) Write a shell script that, given a file name as the argument will
count English language articles such as 'A', 'An' and 'The'.
Code:
#!/bin/bash
file=$1
a=0
if [ $# -ne 1 ]
then
 echo "$0 fileName"
 exit 1
fi
if [ ! -f $file ]
then
 echo "$file not a file"
 exit 2
fi
while read line
do
 l=$(echo $line | tr [:upper:] [:lower:])
for word in $l
do
 [[ $word == "a" || $word == "an" || $word == "the" ]] && ((a++))
done
done < $file
echo "articles : $a"
Q.4) Write a shell script that, given a file name as the argument will
write the even numbered line to a file with name even file and odd
numbered lines in a text file called odd file.
Code:
#!/bin/bash
file=$1
counter=0
if [ $# -ne 1 ]
then
 echo "$0 fileName"
 exit 1
fi
if [ ! -f $file ]
then
 echo "$file not a file"
 exit 2
fi
while read line
do
 ((counter++))
 EvenNo=$(( counter%2 ))
 if [ $EvenNo -eq 0 ]
 then
 echo $line >> evenfile
 else
 echo $line >> oddfile
 fi
done < $file
Q.5) Write a shell script to determine if an input number is a
palindrome or not. A palindromic number is a number where the
digits, with decimal representation usually assumed, are the same
read backwards, for example, 58285.
Code:
#!/bin/bash
echo -n "Enter number : "
read n
# store single digit
sd=0
# store number in reverse order
rev=""
# store original number
on=$n
while [ $n -gt 0 ]
do
 sd=$(( $n % 10 )) # get Remainder
 n=$(( $n / 10 )) # get next digit
 # store previous number and current digit in reverse
 rev=$( echo ${rev}${sd} )
done
if [ $on -eq $rev ];
then
 echo "Number is palindrome"
else
 echo "Number is NOT palindrome"
fi
Q.6) Write a shell program to read a number (such as 123) and find
the sum of digits (1+2+3=6).
Code:
#!/bin/bash
#store the no
num=$1
#store the value of sum
sum=0
if [ $# -ne 1 ]
then
 echo "$0 number"
 exit 1
fi
while [ $num -gt 0 ]
do
 digit=$(( num%10 ))
 num=$(( num/10 ))
 sum=$(( digit+sum ))
done
echo "Sum of digits = $sum"
Q.7) Write a shell program to read a number and display reverse the
number. For example, 123 should be printed as 321.
Code:
#!/bin/bash
#store the no
num=$1
#store the reverse number
rev=0
if [ $# -ne 1 ]
then
 echo "$0 number"
 exit 1
fi
while [ $num -gt 0 ]
do
 digit=$(( num%10 ))
 num=$(( num/10 ))
 rev=$(( digit + rev*10 ))
done
echo "Reverse of number = $rev"
